import unittest

from pypages import Paginator

import pdb


class PyPagesTestCase(unittest.TestCase):

    def test_object_num(self):
        p = Paginator(100)
        self.assertEquals(p.object_num, 100)
        self.assertEquals(p.per_page, 10)
        self.assertEquals(p.current, 1)
        self.assertEquals(p.start, 1)
        self.assertEquals(p.range_num, 10)
        self.assertEquals(p.end, 10)
        self.assertEquals(p.page_num, 10)
        self.assertEquals(p.pages, range(1, 11))
        self.assertFalse(p.has_previous)
        self.assertTrue(p.has_next)
        self.assertEquals(p.previous, None)
        self.assertEquals(p.next, 2)
        self.assertEquals(p.pageset_next, None)
        self.assertEquals(p.pageset_previous, None)

        p = Paginator(0)
        self.assertEquals(p.object_num, 0)
        self.assertEquals(p.per_page, 10)
        self.assertEquals(p.current, 0)
        self.assertEquals(p.start, 1)
        self.assertEquals(p.range_num, 10)
        self.assertEquals(p.end, 0)
        self.assertEquals(p.page_num, 0)
        self.assertEquals(p.pages, [])
        self.assertFalse(p.has_previous)
        self.assertFalse(p.has_next)
        self.assertEquals(p.previous, None)
        self.assertEquals(p.next, None)
        self.assertEquals(p.pageset_next, None)
        self.assertEquals(p.pageset_previous, None)

        p = Paginator(5)
        self.assertEquals(p.object_num, 5)
        self.assertEquals(p.per_page, 10)
        self.assertEquals(p.current, 1)
        self.assertEquals(p.start, 1)
        self.assertEquals(p.range_num, 10)
        self.assertEquals(p.end, 1)
        self.assertEquals(p.page_num, 1)
        self.assertEquals(p.pages, [1])
        self.assertFalse(p.has_previous)
        self.assertFalse(p.has_next)
        self.assertEquals(p.previous, None)
        self.assertEquals(p.next, None)
        self.assertEquals(p.pageset_next, None)
        self.assertEquals(p.pageset_previous, None)

        p = Paginator(45)
        self.assertEquals(p.object_num, 45)
        self.assertEquals(p.per_page, 10)
        self.assertEquals(p.current, 1)
        self.assertEquals(p.start, 1)
        self.assertEquals(p.range_num, 10)
        self.assertEquals(p.end, 5)
        self.assertEquals(p.page_num, 5)
        self.assertEquals(p.pages, [1, 2, 3, 4, 5])
        self.assertFalse(p.has_previous)
        self.assertTrue(p.has_next)
        self.assertEquals(p.previous, None)
        self.assertEquals(p.next, 2)
        self.assertEquals(p.pageset_next, None)
        self.assertEquals(p.pageset_previous, None)

        p = Paginator(145)
        self.assertEquals(p.object_num, 145)
        self.assertEquals(p.per_page, 10)
        self.assertEquals(p.current, 1)
        self.assertEquals(p.start, 1)
        self.assertEquals(p.range_num, 10)
        self.assertEquals(p.end, 10)
        self.assertEquals(p.page_num, 15)
        self.assertEquals(p.pages, range(1, 11))
        self.assertFalse(p.has_previous)
        self.assertTrue(p.has_next)
        self.assertEquals(p.previous, None)
        self.assertEquals(p.next, 2)
        self.assertEquals(p.pageset_next, 11)
        self.assertEquals(p.pageset_previous, None)

    def test_per_page(self):
        p = Paginator(145, 1)
        self.assertEquals(p.object_num, 145)
        self.assertEquals(p.per_page, 1)
        self.assertEquals(p.current, 1)
        self.assertEquals(p.start, 1)
        self.assertEquals(p.range_num, 10)
        self.assertEquals(p.end, 10)
        self.assertEquals(p.page_num, 145)
        self.assertEquals(p.pages, range(1, 11))
        self.assertFalse(p.has_previous)
        self.assertTrue(p.has_next)
        self.assertEquals(p.previous, None)
        self.assertEquals(p.next, 2)
        self.assertEquals(p.pageset_next, 11)
        self.assertEquals(p.pageset_previous, None)

    def test_current(self):
        p = Paginator(145, current=5)
        self.assertEquals(p.object_num, 145)
        self.assertEquals(p.per_page, 10)
        self.assertEquals(p.current, 5)
        self.assertEquals(p.start, 1)
        self.assertEquals(p.range_num, 10)
        self.assertEquals(p.end, 10)
        self.assertEquals(p.page_num, 15)
        self.assertEquals(p.pages, range(1, 11))
        self.assertTrue(p.has_previous)
        self.assertTrue(p.has_next)
        self.assertEquals(p.previous, 4)
        self.assertEquals(p.next, 6)
        self.assertEquals(p.pageset_next, 11)
        self.assertEquals(p.pageset_previous, None)

        p = Paginator(145, current=0)
        self.assertEquals(p.current, 1)
        p = Paginator(145, current=-1)
        self.assertEquals(p.current, 1)
        p = Paginator(145, current="hello")
        self.assertEquals(p.current, 1)

    def test_start(self):
        p = Paginator(145, start=6)
        self.assertEquals(p.object_num, 145)
        self.assertEquals(p.per_page, 10)
        self.assertEquals(p.current, 1)
        self.assertEquals(p.start, 6)
        self.assertEquals(p.range_num, 10)
        self.assertEquals(p.end, 15)
        self.assertEquals(p.page_num, 15)
        self.assertEquals(p.pages, range(6, 16))
        self.assertFalse(p.has_previous)
        self.assertTrue(p.has_next)
        self.assertEquals(p.previous, None)
        self.assertEquals(p.next, 2)
        self.assertEquals(p.pageset_next, None)
        self.assertEquals(p.pageset_previous, 5)

        p = Paginator(145, current=10)
        self.assertEquals(p.start, 5)
        p = Paginator(145, start=0)
        self.assertEquals(p.start, 1)
        p = Paginator(145, start=20)
        self.assertEquals(p.start, 20)
        self.assertEquals(p.pages, [])

    def test_range_num(self):
        p = Paginator(145, range_num=50)
        self.assertEquals(p.object_num, 145)
        self.assertEquals(p.per_page, 10)
        self.assertEquals(p.current, 1)
        self.assertEquals(p.start, 1)
        self.assertEquals(p.range_num, 50)
        self.assertEquals(p.end, 15)
        self.assertEquals(p.page_num, 15)
        self.assertEquals(p.pages, range(1, 16))
        self.assertFalse(p.has_previous)
        self.assertTrue(p.has_next)
        self.assertEquals(p.previous, None)
        self.assertEquals(p.next, 2)
        self.assertEquals(p.pageset_next, None)
        self.assertEquals(p.pageset_previous, None)

    def test_exception(self):
        self.assertRaises(AssertionError, Paginator, -145)
        self.assertRaises((AssertionError, ZeroDivisionError),
                          Paginator, 145, 0)
        self.assertRaises(AssertionError, Paginator, 145, range_num=-1)
        self.assertRaises(ValueError, Paginator, "value")

    def test_pageset(self):
        p = Paginator(100,)
        self.assertEquals(p.pageset_next, None)
        self.assertEquals(p.pageset_previous, None)

        p = Paginator(150,)
        self.assertEquals(p.pageset_next, 11)
        self.assertEquals(p.pageset_previous, None)

        p = Paginator(150, start=2)
        self.assertEquals(p.pageset_next, 12)
        self.assertEquals(p.pageset_previous, 1)

        p = Paginator(150, start=3)
        self.assertEquals(p.pageset_next, 13)
        self.assertEquals(p.pageset_previous, 2)

        p = Paginator(150, start=4)
        self.assertEquals(p.pageset_next, 14)
        self.assertEquals(p.pageset_previous, 3)

        p = Paginator(150, start=5)
        self.assertEquals(p.pageset_next, 15)
        self.assertEquals(p.pageset_previous, 4)

        p = Paginator(150, start=6)
        self.assertEquals(p.pageset_next, None)
        self.assertEquals(p.pageset_previous, 5)

        p = Paginator(150, start=7)
        self.assertEquals(p.pageset_next, None)
        self.assertEquals(p.pageset_previous, 6)


if __name__ == "__main__":
    unittest.main()
